{"ast":null,"code":"import _classCallCheck from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristentang/Desktop/myreads/src/App.js\";\nimport React from 'react';\nimport Book from './Book.js';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Link, Route } from 'react-router-dom';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      query: ''\n    };\n\n    _this.updateBookShelf = function (bookInfo, shelfSelection) {\n      BooksAPI.update(bookInfo, shelfSelection).then(function (book) {\n        // promise with book return\n        bookInfo.shelf = shelfSelection;\n\n        _this.setState(function (currentState) {\n          return {\n            books: currentState.books.filter(function (book) {\n              return book.id !== bookInfo.id;\n            }).concat([book])\n          };\n        });\n      });\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query\n        };\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          books = _this$state.books,\n          query = _this$state.query;\n      var bookShelves = [{\n        id: 'currentlyReading',\n        name: 'Currently Reading',\n        list: books.filter(function (book) {\n          return book.bookShelf === 'currentlyReading';\n        })\n      }, {\n        id: 'wantToRead',\n        name: 'Want To Read',\n        list: books.filter(function (book) {\n          return book.bookShelf === 'wantToRead';\n        })\n      }, {\n        id: 'read',\n        name: 'Read',\n        list: books.filter(function (book) {\n          return book.bookShelf === 'read';\n        })\n      }, {\n        id: 'none',\n        name: 'None',\n        list: books.filter(function (book) {\n          return book.bookShelf === 'none';\n        })\n      }];\n      var viewableBookShelves = bookShelves.filter(function (bookShelf) {\n        return bookShelf.id !== 'none';\n      });\n      var queriedBooks = query === '' ? books : books.filter(function (book) {\n        return book.title.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/search\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(\"div\", {\n            className: \"search-books\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"search-books-bar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/\",\n            className: \"close-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"search-books-input-wrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title or author\",\n            value: query,\n            onChange: function onChange(event) {\n              return _this3.updateQuery(event.target.value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"search-books-results\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"ol\", {\n            className: \"books-grid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, queriedBooks.map(function (book) {\n            return React.createElement(\"li\", {\n              key: book.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109\n              },\n              __self: this\n            }, React.createElement(Book, {\n              bookInfo: book,\n              bookShelves: bookShelves,\n              onUpdateBookShelf: function onUpdateBookShelf(book) {\n                _this3.updateBookShelf(book);\n\n                history.push('/');\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }));\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"list-books\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"list-books-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"MyReads\")), React.createElement(\"div\", {\n            className: \"list-books-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, viewableBookShelves.map(function (shelf) {\n            return React.createElement(\"div\", {\n              key: shelf.id,\n              className: \"bookshelf\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              className: \"bookshelf-title\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, shelf.name), React.createElement(\"div\", {\n              className: \"bookshelf-books\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134\n              },\n              __self: this\n            }, React.createElement(\"ol\", {\n              className: \"books-grid\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }, shelf.list.map(function (book) {\n              return React.createElement(\"li\", {\n                key: book.title,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, React.createElement(Book, {\n                bookInfo: book,\n                bookShelves: bookShelves,\n                onUpdateBookShelf: function onUpdateBookShelf(book, shelf) {\n                  _this3.updateBookShelf(book, shelf);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138\n                },\n                __self: this\n              }));\n            }))));\n          })), React.createElement(\"div\", {\n            className: \"open-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, \"Add a book\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/kristentang/Desktop/myreads/src/App.js"],"names":["React","Book","BooksAPI","Link","Route","BooksApp","state","books","query","updateBookShelf","bookInfo","shelfSelection","update","then","book","shelf","setState","currentState","filter","id","concat","updateQuery","clearQuery","getAll","bookShelves","name","list","bookShelf","viewableBookShelves","queriedBooks","title","toLowerCase","includes","history","event","target","value","map","push","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAcRC,e,GAAkB,UAACC,QAAD,EAAWC,cAAX,EAA8B;AAC9CT,MAAAA,QAAQ,CAACU,MAAT,CAAgBF,QAAhB,EAA0BC,cAA1B,EACGE,IADH,CACQ,UAACC,IAAD,EAAU;AAAE;AAChBJ,QAAAA,QAAQ,CAACK,KAAT,GAAiBJ,cAAjB;;AACA,cAAKK,QAAL,CAAc,UAACC,YAAD;AAAA,iBAAmB;AAC/BV,YAAAA,KAAK,EAAEU,YAAY,CAACV,KAAb,CACNW,MADM,CACC,UAAAJ,IAAI;AAAA,qBAAIA,IAAI,CAACK,EAAL,KAAYT,QAAQ,CAACS,EAAzB;AAAA,aADL,EAENC,MAFM,CAEC,CAACN,IAAD,CAFD;AADwB,WAAnB;AAAA,SAAd;AAKD,OARH;AASD,K;;UAEDO,W,GAAc,UAACb,KAAD,EAAW;AACvB,YAAKQ,QAAL,CAAc;AAAA,eAAO;AACnBR,UAAAA,KAAK,EAAEA;AADY,SAAP;AAAA,OAAd;AAGD,K;;UAEDc,U,GAAa,YAAM;AACjB,YAAKD,WAAL,CAAiB,EAAjB;AACD,K;;;;;;;wCA7BmB;AAAA;;AAClBnB,MAAAA,QAAQ,CAACqB,MAAT,GACCV,IADD,CACM,UAACN,KAAD,EAAW;AACf,QAAA,MAAI,CAACS,QAAL,CAAc;AAAA,iBAAO;AACnBT,YAAAA,KAAK,EAALA;AADmB,WAAP;AAAA,SAAd;AAGD,OALD;AAMD;;;6BAwBQ;AAAA;;AAAA,wBACgB,KAAKD,KADrB;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOC,KADP,eACOA,KADP;AAEP,UAAMgB,WAAW,GAAG,CAClB;AACEL,QAAAA,EAAE,EAAE,kBADN;AAEEM,QAAAA,IAAI,EAAE,mBAFR;AAGEC,QAAAA,IAAI,EAAEnB,KAAK,CAACW,MAAN,CAAa,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACa,SAAL,KAAmB,kBADF;AAAA,SAAb;AAHR,OADkB,EAOlB;AACER,QAAAA,EAAE,EAAE,YADN;AAEEM,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,IAAI,EAAEnB,KAAK,CAACW,MAAN,CAAa,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACa,SAAL,KAAmB,YADF;AAAA,SAAb;AAHR,OAPkB,EAalB;AACER,QAAAA,EAAE,EAAE,MADN;AAEEM,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,IAAI,EAAEnB,KAAK,CAACW,MAAN,CAAa,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACa,SAAL,KAAmB,MADF;AAAA,SAAb;AAHR,OAbkB,EAmBlB;AACER,QAAAA,EAAE,EAAE,MADN;AAEEM,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,IAAI,EAAEnB,KAAK,CAACW,MAAN,CAAa,UAACJ,IAAD;AAAA,iBACjBA,IAAI,CAACa,SAAL,KAAmB,MADF;AAAA,SAAb;AAHR,OAnBkB,CAApB;AA0BA,UAAMC,mBAAmB,GAAIJ,WAAW,CAACN,MAAZ,CAAmB,UAACS,SAAD;AAAA,eAC9CA,SAAS,CAACR,EAAV,KAAiB,MAD6B;AAAA,OAAnB,CAA7B;AAGA,UAAMU,YAAY,GAAGrB,KAAK,KAAK,EAAV,GACnBD,KADmB,GAEnBA,KAAK,CAACW,MAAN,CAAa,UAACJ,IAAD;AAAA,eACbA,IAAI,CAACgB,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCxB,KAAK,CAACuB,WAAN,EAAlC,CADa;AAAA,OAAb,CAFF;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,MAAM,EAAE;AAAA,cAAEE,OAAF,QAAEA,OAAF;AAAA,iBAC5B;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AACE,YAAA,EAAE,EAAC,GADL;AAEE,YAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASE;AACE,YAAA,IAAI,EAAC,MADP;AACc,YAAA,WAAW,EAAC,2BAD1B;AAEE,YAAA,KAAK,EAAEzB,KAFT;AAGE,YAAA,QAAQ,EAAE,kBAAC0B,KAAD;AAAA,qBAAW,MAAI,CAACb,WAAL,CAAiBa,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,aAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CALF,CADF,EAqBE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGP,YAAY,CAACQ,GAAb,CAAiB,UAACvB,IAAD;AAAA,mBAChB;AAAI,cAAA,GAAG,EAAEA,IAAI,CAACgB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AACE,cAAA,QAAQ,EAAEhB,IADZ;AAEE,cAAA,WAAW,EAAEU,WAFf;AAGE,cAAA,iBAAiB,EAAE,2BAACV,IAAD,EAAU;AAC3B,gBAAA,MAAI,CAACL,eAAL,CAAqBK,IAArB;;AACAmB,gBAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD,eANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADgB;AAAA,WAAjB,CADH,CADF,CArBF,CAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EA2CE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC5B;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGV,mBAAmB,CAACS,GAApB,CAAwB,UAACtB,KAAD;AAAA,mBACvB;AAAK,cAAA,GAAG,EAAEA,KAAK,CAACI,EAAhB;AAAoB,cAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCJ,KAAK,CAACU,IAAvC,CADF,EAEE;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGV,KAAK,CAACW,IAAN,CAAWW,GAAX,CAAe,UAACvB,IAAD;AAAA,qBACd;AAAI,gBAAA,GAAG,EAAEA,IAAI,CAACgB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,IAAD;AACE,gBAAA,QAAQ,EAAEhB,IADZ;AAEE,gBAAA,WAAW,EAAEU,WAFf;AAGE,gBAAA,iBAAiB,EAAE,2BAACV,IAAD,EAAOC,KAAP,EAAiB;AAClC,kBAAA,MAAI,CAACN,eAAL,CAAqBK,IAArB,EAA2BC,KAA3B;AACD,iBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADc;AAAA,aAAf,CADH,CADF,CAFF,CADuB;AAAA,WAAxB,CADH,CAJF,EA0BE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AACE,YAAA,EAAE,EAAC,SADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF,CA1BF,CAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CF,CADF;AAiFD;;;;EA3JoBf,KAAK,CAACuC,S;;AA8J7B,eAAelC,QAAf","sourcesContent":["import React from 'react'\nimport Book from './Book.js'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport {Link, Route} from 'react-router-dom';\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    query: ''\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll()\n    .then((books) => {\n      this.setState(() => ({\n        books\n      }))\n    })\n  }\n\n  updateBookShelf = (bookInfo, shelfSelection) => {\n    BooksAPI.update(bookInfo, shelfSelection)\n      .then((book) => { // promise with book return\n        bookInfo.shelf = shelfSelection;\n        this.setState((currentState) => ({\n          books: currentState.books\n          .filter(book => book.id !== bookInfo.id)\n          .concat([book])\n        }))\n      })\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query\n    }))\n  }\n\n  clearQuery = () => {\n    this.updateQuery('')\n  }\n\n  render() {\n    const {books, query} = this.state\n    const bookShelves = [\n      {\n        id: 'currentlyReading',\n        name: 'Currently Reading',\n        list: books.filter((book) => (\n          book.bookShelf === 'currentlyReading' ))\n      },\n      {\n        id: 'wantToRead',\n        name: 'Want To Read',\n        list: books.filter((book) => (\n          book.bookShelf === 'wantToRead' ))\n      },\n      {\n        id: 'read',\n        name: 'Read',\n        list: books.filter((book) => (\n          book.bookShelf === 'read' ))\n      },\n      {\n        id: 'none',\n        name: 'None',\n        list: books.filter((book) => (\n          book.bookShelf === 'none' ))\n      }\n    ]\n    const viewableBookShelves =  bookShelves.filter((bookShelf) => (\n      bookShelf.id !== 'none' ))\n\n    const queriedBooks = query === ''\n    ? books\n    : books.filter((book) => (\n      book.title.toLowerCase().includes(query.toLowerCase())\n    ))\n\n    return (\n      <div className=\"app\">\n\n        <Route path='/search' render={({history}) => (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link\n                to='/'\n                className=\"close-search\">\n              </Link>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input\n                  type=\"text\" placeholder=\"Search by title or author\"\n                  value={query}\n                  onChange={(event) => this.updateQuery(event.target.value)} />\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\">\n                {queriedBooks.map((book) => (\n                  <li key={book.title}>\n                    <Book\n                      bookInfo={book}\n                      bookShelves={bookShelves}\n                      onUpdateBookShelf={(book) => {\n                        this.updateBookShelf(book)\n                        history.push('/')\n                      }}\n                    />\n                  </li>\n                ))}\n              </ol>\n            </div>\n          </div>\n        )} />\n\n        <Route exact path='/' render={() => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              {viewableBookShelves.map((shelf) => (\n                <div key={shelf.id} className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">{shelf.name}</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                      {shelf.list.map((book) => (\n                        <li key={book.title}>\n                          <Book\n                            bookInfo={book}\n                            bookShelves={bookShelves}\n                            onUpdateBookShelf={(book, shelf) => {\n                              this.updateBookShelf(book, shelf)\n                            }}\n                          />\n                        </li>\n                      ))}\n                    </ol>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"open-search\">\n              <Link\n                to='/search'>\n                <button>Add a book</button>\n              </Link>\n            </div>\n          </div>\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}