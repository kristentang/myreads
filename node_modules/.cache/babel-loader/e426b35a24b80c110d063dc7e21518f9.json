{"ast":null,"code":"import _classCallCheck from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristentang/Desktop/myreads/src/BookSearch.js\";\nimport React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport Book from './Book.js';\nimport * as BooksAPI from './BooksAPI';\n\nvar BookSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookSearch, _React$Component);\n\n  function BookSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query\n        };\n      });\n\n      BooksAPI.search(query).then(function (books) {\n        // promise with book return\n        console.log(books.error);\n        var booksResult = books.error === undefined ? [] : books;\n        console.log(booksResult);\n\n        _this.setState(function () {\n          return {\n            books: booksResult\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BookSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var bookShelves = this.props.bookShelves;\n      var _this$state = this.state,\n          books = _this$state.books,\n          query = _this$state.query;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, books.length > 0 && books.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Book, {\n          bookInfo: book,\n          bookShelves: bookShelves,\n          onUpdateshelf: function onUpdateshelf(book) {\n            _this2.updateBookShelf(book);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return BookSearch;\n}(React.Component);\n\nexport default BookSearch;","map":{"version":3,"sources":["/Users/kristentang/Desktop/myreads/src/BookSearch.js"],"names":["React","Link","Book","BooksAPI","BookSearch","state","books","query","updateQuery","setState","search","then","console","log","error","booksResult","undefined","bookShelves","props","event","target","value","length","map","book","title","updateBookShelf","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;IAGMC,U;;;;;;;;;;;;;;;;;UAOJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAKRC,W,GAAc,UAACD,KAAD,EAAW;AACvB,YAAKE,QAAL,CAAc;AAAA,eAAO;AACnBF,UAAAA,KAAK,EAAEA;AADY,SAAP;AAAA,OAAd;;AAGAJ,MAAAA,QAAQ,CAACO,MAAT,CAAgBH,KAAhB,EACGI,IADH,CACQ,UAACL,KAAD,EAAW;AAAE;AACjBM,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,KAAlB;AAEA,YAAIC,WAAW,GAAGT,KAAK,CAACQ,KAAN,KAAgBE,SAAhB,GAA4B,EAA5B,GAAiCV,KAAnD;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;;AACA,cAAKN,QAAL,CAAc;AAAA,iBAAO;AACnBH,YAAAA,KAAK,EAAES;AADY,WAAP;AAAA,SAAd;AAGD,OATH;AAUD,K;;;;;;;6BAES;AAAA;;AAAA,UACDE,WADC,GACc,KAAKC,KADnB,CACDD,WADC;AAAA,wBAEe,KAAKZ,KAFpB;AAAA,UAEDC,KAFC,eAEDA,KAFC;AAAA,UAEMC,KAFN,eAEMA,KAFN;AAIR,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AACE,QAAA,IAAI,EAAC,MADP;AACc,QAAA,WAAW,EAAC,2BAD1B;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,QAAQ,EAAE,kBAACY,KAAD;AAAA,iBAAW,MAAI,CAACX,WAAL,CAAiBW,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CALF,CADF,EAqBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,KAAK,CAACgB,MAAN,GAAe,CAAf,IAAqBhB,KAAK,CAACiB,GAAN,CAAU,UAACC,IAAD;AAAA,eAC9B;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,QAAQ,EAAED,IADZ;AAEE,UAAA,WAAW,EAAEP,WAFf;AAGE,UAAA,aAAa,EAAE,uBAACO,IAAD,EAAU;AACvB,YAAA,MAAI,CAACE,eAAL,CAAqBF,IAArB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAD8B;AAAA,OAAV,CADxB,CADF,CArBF,CADF;AAuCD;;;;EAvEsBxB,KAAK,CAAC2B,S;;AA2E/B,eAAevB,UAAf","sourcesContent":["import React from 'react'\nimport './App.css'\nimport {Link} from 'react-router-dom'\nimport Book from './Book.js'\nimport * as BooksAPI from './BooksAPI'\n\n\nclass BookSearch extends React.Component {\n  // queriedBooks = query === ''\n  // ? []\n  // : books.filter((book) => (\n  //   book.title.toLowerCase().includes(query.toLowerCase())\n  // ))\n\n  state = {\n    books: [],\n    query: ''\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query\n    }))\n    BooksAPI.search(query)\n      .then((books) => { // promise with book return\n        console.log(books.error);\n\n        let booksResult = books.error === undefined ? [] : books\n        console.log(booksResult);\n        this.setState(() => ({\n          books: booksResult\n        }))\n      })\n  }\n\n  render () {\n    const {bookShelves} = this.props\n    const {books, query} = this.state\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link\n            to='/'\n            className=\"close-search\">\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\n              You can find these search terms here:\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n              you don't find a specific author or title. Every search is limited by search terms.\n            */}\n            <input\n              type=\"text\" placeholder=\"Search by title or author\"\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {books.length > 0 && (books.map((book) => (\n              <li key={book.title}>\n                <Book\n                  bookInfo={book}\n                  bookShelves={bookShelves}\n                  onUpdateshelf={(book) => {\n                    this.updateBookShelf(book)\n                  }}\n                />\n              </li>\n            )))}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default BookSearch\n"]},"metadata":{},"sourceType":"module"}