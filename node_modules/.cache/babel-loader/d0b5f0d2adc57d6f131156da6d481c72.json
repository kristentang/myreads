{"ast":null,"code":"import _slicedToArray from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristentang/Desktop/myreads/src/BookSearch.js\";\nimport React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport Book from './Book.js';\nimport * as BooksAPI from './BooksAPI';\nimport PropTypes from 'prop-types';\n\nvar BookSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookSearch, _React$Component);\n\n  function BookSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query\n        };\n      });\n\n      if (query) {\n        BooksAPI.search(query).then(function (books) {\n          // promise with book return\n          if (!books.error) {\n            _this.setState(function () {\n              return {\n                books: books\n              };\n            });\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = books.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var _ref3 = _step.value;\n\n                var _ref2 = _slicedToArray(_ref3, 2);\n\n                var index = _ref2[0];\n                var value = _ref2[1];\n                console.log(index);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          } else {\n            _this.setState({\n              books: []\n            });\n          }\n        });\n      } else {\n        _this.setState({\n          books: [],\n          query: ''\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BookSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          myBooks = _this$props.myBooks,\n          bookShelves = _this$props.bookShelves,\n          updateBookShelf = _this$props.updateBookShelf;\n      var _this$state = this.state,\n          books = _this$state.books,\n          query = _this$state.query;\n      console.log(myBooks);\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, (books !== undefined, books.length > 0) && books.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Book, {\n          bookInfo: book,\n          bookShelves: bookShelves,\n          updateBookShelf: updateBookShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return BookSearch;\n}(React.Component);\n\nBookSearch.propTypes = {\n  myBooks: PropTypes.array.isRequired,\n  bookShelves: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default BookSearch;","map":{"version":3,"sources":["/Users/kristentang/Desktop/myreads/src/BookSearch.js"],"names":["React","Link","Book","BooksAPI","PropTypes","BookSearch","state","books","query","updateQuery","setState","search","then","error","entries","index","value","console","log","props","myBooks","bookShelves","updateBookShelf","event","target","undefined","length","map","book","id","Component","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport {Link} from 'react-router-dom'\nimport Book from './Book.js'\nimport * as BooksAPI from './BooksAPI'\nimport PropTypes from 'prop-types'\n\nclass BookSearch extends React.Component {\n  static propTypes = {\n    myBooks: PropTypes.array.isRequired,\n    bookShelves: PropTypes.array.isRequired,\n    updateBookShelf: PropTypes.func.isRequired\n  }\n\n  state = {\n    books: [],\n    query: ''\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query\n    }))\n    if (query) {\n      BooksAPI.search(query)\n        .then((books) => { // promise with book return\n          if (!books.error) {\n            this.setState(() => ({\n              books\n            }))\n            for (const [index, value] of books.entries()) {\n              console.log(index)\n            }\n          } else {\n            this.setState({books: []})\n          }\n        })\n    } else {\n      this.setState({books: [], query: ''})\n    }\n  }\n\n  render () {\n    const {myBooks, bookShelves, updateBookShelf} = this.props\n    const {books, query} = this.state\n    console.log(myBooks)\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link\n            to='/'\n            className=\"close-search\">\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\" placeholder=\"Search by title or author\"\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {(books !== undefined, books.length > 0) && (books.map((book) => (\n              <li key={book.id}>\n                <Book\n                  bookInfo={book}\n                  bookShelves={bookShelves}\n                  updateBookShelf={updateBookShelf}\n                />\n              </li>\n            )))}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BookSearch\n"]},"metadata":{},"sourceType":"module"}