{"ast":null,"code":"import _classCallCheck from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristentang/Desktop/myreads/src/BookSearch.js\";\nimport React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Book from './Book.js';\n\nvar BookSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookSearch, _React$Component);\n\n  function BookSearch() {\n    _classCallCheck(this, BookSearch);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookSearch).apply(this, arguments));\n  }\n\n  _createClass(BookSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          queriedBooks = _this$props.queriedBooks,\n          query = _this$props.query,\n          updateQuery = _this$props.updateQuery,\n          bookShelves = _this$props.bookShelves;\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, queriedBooks.map(function (book) {\n        return React.createElement(\"li\", {\n          key: book.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Book, {\n          bookInfo: book,\n          bookShelves: bookShelves,\n          onUpdateshelf: function onUpdateshelf(book) {\n            _this.updateBookShelf(book);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return BookSearch;\n}(React.Component);\n\nexport default BookSearch;","map":{"version":3,"sources":["/Users/kristentang/Desktop/myreads/src/BookSearch.js"],"names":["React","PropTypes","Link","Book","BookSearch","props","queriedBooks","query","updateQuery","bookShelves","event","target","value","map","book","title","updateBookShelf","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAGMC,U;;;;;;;;;;;;;6BACM;AAAA;;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACDC,YADC,eACDA,YADC;AAAA,UACaC,KADb,eACaA,KADb;AAAA,UACoBC,WADpB,eACoBA,WADpB;AAAA,UACiCC,WADjC,eACiCA,WADjC;AAGR,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AACE,QAAA,IAAI,EAAC,MADP;AACc,QAAA,WAAW,EAAC,2BAD1B;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,QAAQ,EAAE,kBAACG,KAAD;AAAA,iBAAW,KAAI,CAACF,WAAL,CAAiBE,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CALF,CADF,EAqBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,YAAY,CAACO,GAAb,CAAiB,UAACC,IAAD;AAAA,eAChB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,QAAQ,EAAED,IADZ;AAEE,UAAA,WAAW,EAAEL,WAFf;AAGE,UAAA,aAAa,EAAE,uBAACK,IAAD,EAAU;AACvB,YAAA,KAAI,CAACE,eAAL,CAAqBF,IAArB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADgB;AAAA,OAAjB,CADH,CADF,CArBF,CADF;AAuCD;;;;EA3CsBd,KAAK,CAACiB,S;;AA+C/B,eAAeb,UAAf","sourcesContent":["import React from 'react'\nimport './App.css'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom';\nimport Book from './Book.js'\n\n\nclass BookSearch extends React.Component {\n  render () {\n    const {queriedBooks, query, updateQuery, bookShelves} = this.props\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link\n            to='/'\n            className=\"close-search\">\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\n              You can find these search terms here:\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n              you don't find a specific author or title. Every search is limited by search terms.\n            */}\n            <input\n              type=\"text\" placeholder=\"Search by title or author\"\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {queriedBooks.map((book) => (\n              <li key={book.title}>\n                <Book\n                  bookInfo={book}\n                  bookShelves={bookShelves}\n                  onUpdateshelf={(book) => {\n                    this.updateBookShelf(book)\n                  }}\n                />\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default BookSearch\n"]},"metadata":{},"sourceType":"module"}