{"ast":null,"code":"import _classCallCheck from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kristentang/Desktop/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kristentang/Desktop/myreads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Link, Route } from 'react-router-dom';\nimport BookSearch from './BookSearch.js';\nimport BookShelves from './BookShelves.js';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      query: ''\n    };\n\n    _this.updateBookShelf = function (bookInfo, shelfSelection) {\n      BooksAPI.update(bookInfo, shelfSelection).then(function (book) {\n        // promise with book return\n        console.log(shelfSelection);\n        bookInfo.shelf = shelfSelection;\n\n        _this.setState(function (prevState) {\n          return {\n            books: prevState.books.filter(function (book) {\n              return book.id !== bookInfo.id;\n            }).concat(book)\n          };\n        });\n      });\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        return _this2.setState({\n          books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          books = _this$state.books,\n          query = _this$state.query;\n      var bookShelves = [{\n        id: 'currentlyReading',\n        name: 'Currently Reading',\n        list: books.filter(function (book) {\n          return book.shelf === 'currentlyReading';\n        })\n      }, {\n        id: 'wantToRead',\n        name: 'Want To Read',\n        list: books.filter(function (book) {\n          return book.shelf === 'wantToRead';\n        })\n      }, {\n        id: 'read',\n        name: 'Read',\n        list: books.filter(function (book) {\n          return book.shelf === 'read';\n        })\n      }, {\n        id: 'none',\n        name: 'None',\n        list: books.filter(function (book) {\n          return book.shelf === 'none';\n        })\n      }];\n      var viewableBookShelves = bookShelves.filter(function (bookShelf) {\n        return bookShelf.id !== 'none';\n      });\n      var queriedBooks = query === '' ? [] : books.filter(function (book) {\n        return book.title.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(BookSearch, {\n            queriedBooks: queriedBooks,\n            query: _this3.state.query,\n            updateQuery: _this3.updateQuery,\n            bookShelves: bookShelves,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            className: \"list-books\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"list-books-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"MyReads\")), React.createElement(BookShelves, {\n            bookShelves: bookShelves,\n            viewableBookShelves: viewableBookShelves,\n            updateBookShelf: _this3.updateBookShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"open-search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Add a book\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/kristentang/Desktop/myreads/src/App.js"],"names":["React","BooksAPI","Link","Route","BookSearch","BookShelves","BooksApp","state","books","query","updateBookShelf","bookInfo","shelfSelection","update","then","book","console","log","shelf","setState","prevState","filter","id","concat","updateQuery","getAll","bookShelves","name","list","viewableBookShelves","bookShelf","queriedBooks","title","toLowerCase","includes","history","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport {Link, Route} from 'react-router-dom';\nimport BookSearch from './BookSearch.js'\nimport BookShelves from './BookShelves.js'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    query: ''\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll()\n    .then(books =>\n      this.setState({ books }));\n  }\n\n  updateBookShelf = (bookInfo, shelfSelection) => {\n    BooksAPI.update(bookInfo, shelfSelection)\n      .then((book) => { // promise with book return\n        console.log(shelfSelection);\n        bookInfo.shelf = shelfSelection;\n        this.setState((prevState) => ({\n          books: prevState.books\n          .filter(book => book.id !== bookInfo.id)\n          .concat(book)\n        }))\n      })\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query\n    }))\n  }\n\n  render() {\n    const {books, query} = this.state\n    const bookShelves = [\n      {\n        id: 'currentlyReading',\n        name: 'Currently Reading',\n        list: books.filter((book) => (\n          book.shelf === 'currentlyReading' ))\n      },\n      {\n        id: 'wantToRead',\n        name: 'Want To Read',\n        list: books.filter((book) => (\n          book.shelf === 'wantToRead' ))\n      },\n      {\n        id: 'read',\n        name: 'Read',\n        list: books.filter((book) => (\n          book.shelf === 'read' ))\n      },\n      {\n        id: 'none',\n        name: 'None',\n        list: books.filter((book) => (\n          book.shelf === 'none' ))\n      }\n    ]\n    const viewableBookShelves =  bookShelves.filter((bookShelf) => (\n      bookShelf.id !== 'none' ))\n\n    const queriedBooks = query === ''\n    ? []\n    : books.filter((book) => (\n      book.title.toLowerCase().includes(query.toLowerCase())\n    ))\n\n    return (\n      <div className=\"app\">\n\n        <Route exact path='/search' render={({history}) => (\n          <BookSearch queriedBooks={queriedBooks} query={this.state.query} updateQuery={this.updateQuery} bookShelves={bookShelves}/>\n        )} />\n\n        <Route exact path='/' render={() => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <BookShelves bookShelves={bookShelves} viewableBookShelves={viewableBookShelves} updateBookShelf={this.updateBookShelf} />\n            <div className=\"open-search\">\n              <Link\n                to='/search'>\n                <button>Add a book</button>\n              </Link>\n            </div>\n          </div>\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}